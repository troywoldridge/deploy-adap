"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@algolia+requester-node-http@4.24.0";
exports.ids = ["vendor-chunks/@algolia+requester-node-http@4.24.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@algolia+requester-node-http@4.24.0/node_modules/@algolia/requester-node-http/dist/requester-node-http.esm.js":
/*!******************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@algolia+requester-node-http@4.24.0/node_modules/@algolia/requester-node-http/dist/requester-node-http.esm.js ***!
  \******************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createNodeHttpRequester: () => (/* binding */ createNodeHttpRequester)\n/* harmony export */ });\n/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! http */ \"http\");\n/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(http__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var https__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! https */ \"https\");\n/* harmony import */ var https__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(https__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! url */ \"url\");\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(url__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n\n\n\n/* eslint functional/prefer-readonly-type: 0 */\r\nconst agentOptions = { keepAlive: true };\r\nconst defaultHttpAgent = new http__WEBPACK_IMPORTED_MODULE_0__.Agent(agentOptions);\r\nconst defaultHttpsAgent = new https__WEBPACK_IMPORTED_MODULE_1__.Agent(agentOptions);\r\nfunction createNodeHttpRequester({ agent: userGlobalAgent, httpAgent: userHttpAgent, httpsAgent: userHttpsAgent, requesterOptions = {}, } = {}) {\r\n    const httpAgent = userHttpAgent || userGlobalAgent || defaultHttpAgent;\r\n    const httpsAgent = userHttpsAgent || userGlobalAgent || defaultHttpsAgent;\r\n    return {\r\n        send(request) {\r\n            return new Promise(resolve => {\r\n                const url = (0,url__WEBPACK_IMPORTED_MODULE_2__.parse)(request.url);\r\n                const path = url.query === null ? url.pathname : `${url.pathname}?${url.query}`;\r\n                const options = {\r\n                    ...requesterOptions,\r\n                    agent: url.protocol === 'https:' ? httpsAgent : httpAgent,\r\n                    hostname: url.hostname,\r\n                    path,\r\n                    method: request.method,\r\n                    headers: {\r\n                        ...(requesterOptions && requesterOptions.headers ? requesterOptions.headers : {}),\r\n                        ...request.headers,\r\n                    },\r\n                    ...(url.port !== undefined ? { port: url.port || '' } : {}),\r\n                };\r\n                const req = (url.protocol === 'https:' ? https__WEBPACK_IMPORTED_MODULE_1__ : http__WEBPACK_IMPORTED_MODULE_0__).request(options, response => {\r\n                    // eslint-disable-next-line functional/no-let\r\n                    let contentBuffers = [];\r\n                    response.on('data', chunk => {\r\n                        contentBuffers = contentBuffers.concat(chunk);\r\n                    });\r\n                    response.on('end', () => {\r\n                        // eslint-disable-next-line @typescript-eslint/no-use-before-define\r\n                        clearTimeout(connectTimeout);\r\n                        // eslint-disable-next-line @typescript-eslint/no-use-before-define\r\n                        clearTimeout(responseTimeout);\r\n                        resolve({\r\n                            status: response.statusCode || 0,\r\n                            content: Buffer.concat(contentBuffers).toString(),\r\n                            isTimedOut: false,\r\n                        });\r\n                    });\r\n                });\r\n                const createTimeout = (timeout, content) => {\r\n                    return setTimeout(() => {\r\n                        req.abort();\r\n                        resolve({\r\n                            status: 0,\r\n                            content,\r\n                            isTimedOut: true,\r\n                        });\r\n                    }, timeout * 1000);\r\n                };\r\n                const connectTimeout = createTimeout(request.connectTimeout, 'Connection timeout');\r\n                // eslint-disable-next-line functional/no-let\r\n                let responseTimeout;\r\n                req.on('error', error => {\r\n                    clearTimeout(connectTimeout);\r\n                    clearTimeout(responseTimeout);\r\n                    resolve({ status: 0, content: error.message, isTimedOut: false });\r\n                });\r\n                req.once('response', () => {\r\n                    clearTimeout(connectTimeout);\r\n                    responseTimeout = createTimeout(request.responseTimeout, 'Socket timeout');\r\n                });\r\n                if (request.data !== undefined) {\r\n                    req.write(request.data);\r\n                }\r\n                req.end();\r\n            });\r\n        },\r\n        destroy() {\r\n            httpAgent.destroy();\r\n            httpsAgent.destroy();\r\n            return Promise.resolve();\r\n        },\r\n    };\r\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGFsZ29saWErcmVxdWVzdGVyLW5vZGUtaHR0cEA0LjI0LjAvbm9kZV9tb2R1bGVzL0BhbGdvbGlhL3JlcXVlc3Rlci1ub2RlLWh0dHAvZGlzdC9yZXF1ZXN0ZXItbm9kZS1odHRwLmVzbS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQTZCO0FBQ0E7QUFDRTtBQUNVO0FBQ2I7O0FBRTVCO0FBQ0EsdUJBQXVCO0FBQ3ZCLDZCQUE2Qix1Q0FBSztBQUNsQyw4QkFBOEIsd0NBQU87QUFDckMsbUNBQW1DLG1HQUFtRyxJQUFJLElBQUk7QUFDOUk7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QiwwQ0FBSztBQUNqQyxvRUFBb0UsYUFBYSxHQUFHLFVBQVU7QUFDOUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3R0FBd0c7QUFDeEc7QUFDQSxxQkFBcUI7QUFDckIsbURBQW1ELHVCQUF1QixJQUFJO0FBQzlFO0FBQ0EseURBQXlELGtDQUFLLEdBQUcsaUNBQUk7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCLHFCQUFxQjtBQUNyQixpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekIscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLHNEQUFzRDtBQUNwRixpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBOztBQUVtQyIsInNvdXJjZXMiOlsiL3Zhci93d3cvZGVwbG95LWFkYXAvc3JjL25vZGVfbW9kdWxlcy8ucG5wbS9AYWxnb2xpYStyZXF1ZXN0ZXItbm9kZS1odHRwQDQuMjQuMC9ub2RlX21vZHVsZXMvQGFsZ29saWEvcmVxdWVzdGVyLW5vZGUtaHR0cC9kaXN0L3JlcXVlc3Rlci1ub2RlLWh0dHAuZXNtLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGh0dHAgZnJvbSAnaHR0cCc7XG5pbXBvcnQgeyBBZ2VudCB9IGZyb20gJ2h0dHAnO1xuaW1wb3J0ICogYXMgaHR0cHMgZnJvbSAnaHR0cHMnO1xuaW1wb3J0IHsgQWdlbnQgYXMgQWdlbnQkMSB9IGZyb20gJ2h0dHBzJztcbmltcG9ydCB7IHBhcnNlIH0gZnJvbSAndXJsJztcblxuLyogZXNsaW50IGZ1bmN0aW9uYWwvcHJlZmVyLXJlYWRvbmx5LXR5cGU6IDAgKi9cclxuY29uc3QgYWdlbnRPcHRpb25zID0geyBrZWVwQWxpdmU6IHRydWUgfTtcclxuY29uc3QgZGVmYXVsdEh0dHBBZ2VudCA9IG5ldyBBZ2VudChhZ2VudE9wdGlvbnMpO1xyXG5jb25zdCBkZWZhdWx0SHR0cHNBZ2VudCA9IG5ldyBBZ2VudCQxKGFnZW50T3B0aW9ucyk7XHJcbmZ1bmN0aW9uIGNyZWF0ZU5vZGVIdHRwUmVxdWVzdGVyKHsgYWdlbnQ6IHVzZXJHbG9iYWxBZ2VudCwgaHR0cEFnZW50OiB1c2VySHR0cEFnZW50LCBodHRwc0FnZW50OiB1c2VySHR0cHNBZ2VudCwgcmVxdWVzdGVyT3B0aW9ucyA9IHt9LCB9ID0ge30pIHtcclxuICAgIGNvbnN0IGh0dHBBZ2VudCA9IHVzZXJIdHRwQWdlbnQgfHwgdXNlckdsb2JhbEFnZW50IHx8IGRlZmF1bHRIdHRwQWdlbnQ7XHJcbiAgICBjb25zdCBodHRwc0FnZW50ID0gdXNlckh0dHBzQWdlbnQgfHwgdXNlckdsb2JhbEFnZW50IHx8IGRlZmF1bHRIdHRwc0FnZW50O1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICBzZW5kKHJlcXVlc3QpIHtcclxuICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgdXJsID0gcGFyc2UocmVxdWVzdC51cmwpO1xyXG4gICAgICAgICAgICAgICAgY29uc3QgcGF0aCA9IHVybC5xdWVyeSA9PT0gbnVsbCA/IHVybC5wYXRobmFtZSA6IGAke3VybC5wYXRobmFtZX0/JHt1cmwucXVlcnl9YDtcclxuICAgICAgICAgICAgICAgIGNvbnN0IG9wdGlvbnMgPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgLi4ucmVxdWVzdGVyT3B0aW9ucyxcclxuICAgICAgICAgICAgICAgICAgICBhZ2VudDogdXJsLnByb3RvY29sID09PSAnaHR0cHM6JyA/IGh0dHBzQWdlbnQgOiBodHRwQWdlbnQsXHJcbiAgICAgICAgICAgICAgICAgICAgaG9zdG5hbWU6IHVybC5ob3N0bmFtZSxcclxuICAgICAgICAgICAgICAgICAgICBwYXRoLFxyXG4gICAgICAgICAgICAgICAgICAgIG1ldGhvZDogcmVxdWVzdC5tZXRob2QsXHJcbiAgICAgICAgICAgICAgICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAuLi4ocmVxdWVzdGVyT3B0aW9ucyAmJiByZXF1ZXN0ZXJPcHRpb25zLmhlYWRlcnMgPyByZXF1ZXN0ZXJPcHRpb25zLmhlYWRlcnMgOiB7fSksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC4uLnJlcXVlc3QuaGVhZGVycyxcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIC4uLih1cmwucG9ydCAhPT0gdW5kZWZpbmVkID8geyBwb3J0OiB1cmwucG9ydCB8fCAnJyB9IDoge30pLFxyXG4gICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHJlcSA9ICh1cmwucHJvdG9jb2wgPT09ICdodHRwczonID8gaHR0cHMgOiBodHRwKS5yZXF1ZXN0KG9wdGlvbnMsIHJlc3BvbnNlID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuY3Rpb25hbC9uby1sZXRcclxuICAgICAgICAgICAgICAgICAgICBsZXQgY29udGVudEJ1ZmZlcnMgPSBbXTtcclxuICAgICAgICAgICAgICAgICAgICByZXNwb25zZS5vbignZGF0YScsIGNodW5rID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudEJ1ZmZlcnMgPSBjb250ZW50QnVmZmVycy5jb25jYXQoY2h1bmspO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlLm9uKCdlbmQnLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdXNlLWJlZm9yZS1kZWZpbmVcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2xlYXJUaW1lb3V0KGNvbm5lY3RUaW1lb3V0KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11c2UtYmVmb3JlLWRlZmluZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQocmVzcG9uc2VUaW1lb3V0KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IHJlc3BvbnNlLnN0YXR1c0NvZGUgfHwgMCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IEJ1ZmZlci5jb25jYXQoY29udGVudEJ1ZmZlcnMpLnRvU3RyaW5nKCksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc1RpbWVkT3V0OiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGNyZWF0ZVRpbWVvdXQgPSAodGltZW91dCwgY29udGVudCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxLmFib3J0KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUoe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiAwLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzVGltZWRPdXQ6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgIH0sIHRpbWVvdXQgKiAxMDAwKTtcclxuICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICBjb25zdCBjb25uZWN0VGltZW91dCA9IGNyZWF0ZVRpbWVvdXQocmVxdWVzdC5jb25uZWN0VGltZW91dCwgJ0Nvbm5lY3Rpb24gdGltZW91dCcpO1xyXG4gICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmN0aW9uYWwvbm8tbGV0XHJcbiAgICAgICAgICAgICAgICBsZXQgcmVzcG9uc2VUaW1lb3V0O1xyXG4gICAgICAgICAgICAgICAgcmVxLm9uKCdlcnJvcicsIGVycm9yID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQoY29ubmVjdFRpbWVvdXQpO1xyXG4gICAgICAgICAgICAgICAgICAgIGNsZWFyVGltZW91dChyZXNwb25zZVRpbWVvdXQpO1xyXG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmUoeyBzdGF0dXM6IDAsIGNvbnRlbnQ6IGVycm9yLm1lc3NhZ2UsIGlzVGltZWRPdXQ6IGZhbHNlIH0pO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICByZXEub25jZSgncmVzcG9uc2UnLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgY2xlYXJUaW1lb3V0KGNvbm5lY3RUaW1lb3V0KTtcclxuICAgICAgICAgICAgICAgICAgICByZXNwb25zZVRpbWVvdXQgPSBjcmVhdGVUaW1lb3V0KHJlcXVlc3QucmVzcG9uc2VUaW1lb3V0LCAnU29ja2V0IHRpbWVvdXQnKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgaWYgKHJlcXVlc3QuZGF0YSAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVxLndyaXRlKHJlcXVlc3QuZGF0YSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICByZXEuZW5kKCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZGVzdHJveSgpIHtcclxuICAgICAgICAgICAgaHR0cEFnZW50LmRlc3Ryb3koKTtcclxuICAgICAgICAgICAgaHR0cHNBZ2VudC5kZXN0cm95KCk7XHJcbiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcclxuICAgICAgICB9LFxyXG4gICAgfTtcclxufVxuXG5leHBvcnQgeyBjcmVhdGVOb2RlSHR0cFJlcXVlc3RlciB9O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@algolia+requester-node-http@4.24.0/node_modules/@algolia/requester-node-http/dist/requester-node-http.esm.js\n");

/***/ })

};
;